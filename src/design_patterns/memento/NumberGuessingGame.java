package design_patterns.memento;

import java.util.HashSet;
import java.util.Set;

/**
 * A game where {@link Participant}s attempt to guess numbers generated by the {@link PuzzleMaster}.
 * 
 * @author Jose Uusitalo
 */
public class NumberGuessingGame
{
	/**
	 * The puzzle master hosting the game.
	 */
	final private static PuzzleMaster puzzleMaster = new PuzzleMaster();

	/**
	 * A set of participants in the puzzle master's game.
	 */
	final private static Set<Participant> participants = new HashSet<Participant>();

	/**
	 * Creates the specified number of participants for the number guessing game.
	 *
	 * @param participantCount number of participants to create
	 */
	private static void createParticipants(final int participantCount)
	{
		final int guessesPerSecond = 12;
		Participant p = null;

		for (int i = 0; i < participantCount; i++)
		{
			p = new Participant(guessesPerSecond);
			participants.add(p);
			p.joinGame(puzzleMaster);
		}
	}

	/**
	 * Starts the participants' threads so they may begin guessing numbers.
	 */
	private static void startGuessing()
	{
		for (final Participant p : participants)
			p.start();

		try
		{
			/*
			 * Join this main thread into the participant thread.
			 * This causes this method to return only after all participants have terminated.
			 */
			for (final Participant p : participants)
			{
				p.join();
			}
		}
		catch (InterruptedException e)
		{
			e.printStackTrace();
		}
	}

	/**
	 * @param args arguments
	 */
	public static void main(final String[] args)
	{
		System.out.println();

		createParticipants(5);

		System.out.println("\nParticipants may start guessing.\n");
		startGuessing();

		System.out.println("All participants have solved their puzzles.");
	}
}
